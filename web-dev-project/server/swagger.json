{
    "openapi": "3.0.0",
    "info": {
      "title": "User Management API",
      "version": "1.0.0",
      "description": "API documentation for the user management system"
    },
    "servers": [
      {
        "url": "http://localhost:8080",
        "description": "Local server"
      }
    ],
    "paths": {
      "/api/register": {
        "post": {
          "summary": "Register a new user",
          "tags": ["User"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "password123"
                    }
                  },
                  "required": ["name", "email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User registered successfully"
            },
            "400": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/api/email": {
        "post": {
          "summary": "Check if email exists",
          "tags": ["User"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "johndoe@example.com"
                    }
                  },
                  "required": ["email"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Email check result"
            }
          }
        }
      },
      "/api/password": {
        "post": {
          "summary": "Check if password is valid",
          "tags": ["User"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "example": "password123"
                    }
                  },
                  "required": ["password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password is valid"
            },
            "400": {
              "description": "Invalid password"
            }
          }
        }
      },
      "/api/user_detail": {
        "get": {
          "summary": "Get user details",
          "tags": ["User"],
          "responses": {
            "200": {
              "description": "User details fetched successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/api/logout": {
        "get": {
          "summary": "Log out the user",
          "tags": ["User"],
          "responses": {
            "200": {
              "description": "Successfully logged out"
            }
          }
        }
      },
      "/api/updateuser": {
        "post": {
          "summary": "Update user details",
          "tags": ["User"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Jane Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "janedoe@example.com"
                    }
                  },
                  "required": ["name", "email"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "400": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/api/search-user": {
        "post": {
          "summary": "Search for a user",
          "tags": ["User"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "string",
                      "example": "John"
                    }
                  },
                  "required": ["query"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Search results returned successfully"
            },
            "404": {
              "description": "No users found"
            }
          }
        }
      }
    }
  }
  